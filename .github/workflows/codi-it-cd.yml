name: codi-it-cd

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 소스 코드 다운로드
      - name: Download source code
        uses: actions/checkout@v4

      # Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 빌드
      - name: Build
        run: npm run build

      # 빌드 결과 복사
      - name: Copy build to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: '.'
          target: '/home/ec2-user/codi-it'

      # env설정 및 서버 설정 및 재시작
      - name: Restart app on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/codi-it
            cat > .env << EOF
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }}
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            EOF
            npm ci
            npx prisma generate
            npx prisma db push --accept-data-loss
            mkdir -p /home/ec2-user/logs
            pm2 restart all || pm2 start ecosystem.config.js
            pm2 save
            sudo cp ./nginx/nginx.conf /etc/nginx/conf.d/codi-it.conf
            sudo systemctl restart nginx
